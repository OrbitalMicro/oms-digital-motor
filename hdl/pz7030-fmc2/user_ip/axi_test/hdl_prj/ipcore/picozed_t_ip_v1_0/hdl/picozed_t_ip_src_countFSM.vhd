-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/test_ip/picozed_t_ip_src_countFSM.vhd
-- Created: 2025-10-08 11:52:52
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: picozed_t_ip_src_countFSM
-- Source Path: test_ip/picozed_test_ip/countFSM
-- Hierarchy Level: 1
-- Model version: 1.78
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY picozed_t_ip_src_countFSM IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        trigger_i                         :   IN    std_logic;
        count_o                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END picozed_t_ip_src_countFSM;


ARCHITECTURE rtl OF picozed_t_ip_src_countFSM IS

  -- Signals
  SIGNAL count_o_tmp                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL trigger_reg                      : std_logic;
  SIGNAL countValue                       : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL trigger_reg_next                 : std_logic;
  SIGNAL countValue_next                  : unsigned(31 DOWNTO 0);  -- uint32

BEGIN
  countFSM_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        trigger_reg <= '0';
        countValue <= to_unsigned(16#00000000#, 32);
      ELSIF enb = '1' THEN
        trigger_reg <= trigger_reg_next;
        countValue <= countValue_next;
      END IF;
    END IF;
  END PROCESS countFSM_process;

  countFSM_output : PROCESS (countValue, trigger_i, trigger_reg)
    VARIABLE countValue_temp : unsigned(31 DOWNTO 0);
  BEGIN
    countValue_temp := countValue;
    IF (trigger_i AND ( NOT trigger_reg)) = '1' THEN 
      -- new register poke
      countValue_temp := countValue + 1;
    END IF;
    trigger_reg_next <= trigger_i;
    count_o_tmp <= countValue_temp;
    countValue_next <= countValue_temp;
  END PROCESS countFSM_output;


  count_o <= std_logic_vector(count_o_tmp);

END rtl;

